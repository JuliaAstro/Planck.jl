var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Planck","category":"page"},{"location":"#Planck.jl","page":"Home","title":"Planck.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Code) (Image: Build Status) (Image: PkgEval) (Image: Coverage) (Image: License)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Planck radiation curves, with support for Unitful.jl.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Planck.jl has not yet been added to the Julia general repository and cannot be installed using by using default options on Julia's built-in package manager Pkg. To install from the development repository, you can supply the URL of the repository to ]add like so:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ] # pressing ']' should drop you into pkg mode\n\npkg> add https://github.com/JuliaAstro/Planck.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"Or using Pkg.add(url=...) from the main REPL like so:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> import Pkg; Pkg.add(url=\"https://github.com/JuliaAstro/Planck.jl\")","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"#API/Reference","page":"Home","title":"API/Reference","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Planck]","category":"page"},{"location":"#Planck.blackbody-Tuple{Any, Any, Any}","page":"Home","title":"Planck.blackbody","text":"blackbody([OT], x, T)\n\nEvaluate a blackbody[1] at x, which is in meters by default. If OT is given, the output will be converted to that type, which is convenient for unit conversions. Temperature is assumed to be Kelvin.\n\nArguments\n\nOT: units for intensity, defaulting to SI.\nx: color of light on which to get the intensity.      x can be wavelength or frequency.\nT: temperature of the blackbody.\n\nwarning: Units\nIf you do not use Unitful.jl, the defaults will be SI.\n\nExamples\n\njulia> using Unitful\n\njulia> blackbody(6e-7, 5850)\n2.583616647617974e13\n\njulia> blackbody(Float32, 6e-7, 5850)\n2.5836166f13\n\njulia> blackbody(u\"erg/s/cm^2/nm/sr\", 600u\"nm\", 5850u\"K\")\n2.5836166476179734e7 erg nm^-1 cm^-2 s^-1 sr^-1\n\nReferences\n\n[1]: Blackbody radiation\n\n\n\n\n\n","category":"method"},{"location":"#Contributing-and-Support","page":"Home","title":"Contributing and Support","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you would like to contribute, feel free to open a pull request. If you want to discuss something before contributing, head over to discussions and join or open a new topic. If you're having problems with something, please open an issue.","category":"page"}]
}
